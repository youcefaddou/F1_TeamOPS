
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CarScalarFieldEnum = {
  id: 'id',
  chassisNum: 'chassisNum',
  model: 'model',
  teamId: 'teamId',
  pilotId: 'pilotId',
  createdAt: 'createdAt'
};

exports.Prisma.EngineScalarFieldEnum = {
  id: 'id',
  code: 'code',
  state: 'state',
  teamId: 'teamId',
  createdAt: 'createdAt'
};

exports.Prisma.GrandPrixScalarFieldEnum = {
  id: 'id',
  name: 'name',
  circuit: 'circuit',
  country: 'country',
  date: 'date'
};

exports.Prisma.IncidentScalarFieldEnum = {
  id: 'id',
  type: 'type',
  description: 'description',
  date: 'date',
  carId: 'carId',
  engineId: 'engineId',
  partId: 'partId',
  pilotId: 'pilotId',
  teamId: 'teamId',
  grandPrixId: 'grandPrixId',
  resolved: 'resolved'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  role: 'role',
  teamId: 'teamId',
  nationality: 'nationality',
  age: 'age',
  avatarUrl: 'avatarUrl',
  createdAt: 'createdAt'
};

exports.Prisma.PartScalarFieldEnum = {
  id: 'id',
  reference: 'reference',
  type: 'type',
  quantity: 'quantity',
  teamId: 'teamId'
};

exports.Prisma.ResultScalarFieldEnum = {
  id: 'id',
  position: 'position',
  points: 'points',
  pilotId: 'pilotId',
  carId: 'carId',
  grandPrixId: 'grandPrixId',
  teamId: 'teamId',
  createdAt: 'createdAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  country: 'country',
  password: 'password',
  director: 'director',
  email: 'email'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.CarOrderByRelevanceFieldEnum = {
  chassisNum: 'chassisNum',
  model: 'model'
};

exports.Prisma.EngineOrderByRelevanceFieldEnum = {
  code: 'code',
  state: 'state'
};

exports.Prisma.GrandPrixOrderByRelevanceFieldEnum = {
  name: 'name',
  circuit: 'circuit',
  country: 'country'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.IncidentOrderByRelevanceFieldEnum = {
  type: 'type',
  description: 'description'
};

exports.Prisma.MemberOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  nationality: 'nationality',
  avatarUrl: 'avatarUrl'
};

exports.Prisma.PartOrderByRelevanceFieldEnum = {
  reference: 'reference',
  type: 'type'
};

exports.Prisma.TeamOrderByRelevanceFieldEnum = {
  name: 'name',
  country: 'country',
  password: 'password',
  director: 'director',
  email: 'email'
};
exports.Role = exports.$Enums.Role = {
  PILOT: 'PILOT',
  ENGINEER: 'ENGINEER',
  MECHANIC: 'MECHANIC',
  DIRECTOR: 'DIRECTOR',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  Car: 'Car',
  Engine: 'Engine',
  GrandPrix: 'GrandPrix',
  Incident: 'Incident',
  Member: 'Member',
  Part: 'Part',
  Result: 'Result',
  Team: 'Team'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
